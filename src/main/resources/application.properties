spring.application.name=userManagement
server.port=8081

# OAuth2 Keycloak Configuration
spring.security.oauth2.client.registration.keycloak.client-id=spring-boot-client
spring.security.oauth2.client.registration.keycloak.client-secret=FDpIQYiWwQoQfKf9E5gSXCRPqCrSwWP8
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/login/oauth2/code/keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8888/realms/gestion-utilisateur
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# JWT Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8888/realms/gestion-utilisateur

# Keycloak Admin API Configuration
keycloak.realm=gestion-utilisateur


logging.level.org.springframework.security=DEBUG



# Keycloak Configuration for OpenID Connect
keycloak.auth-server-url=http://localhost:8888
keycloak.resource=spring-boot-client
keycloak.credentials.secret=your-client-secret   # Set if you're using a confidential client
keycloak.bearer-only=true
keycloak.ssl-required=external
keycloak.use-resource-role-mappings=true

# Set OpenID Connect
keycloak.public-client=false 
keycloak.client-id=spring-boot-client   # Ensure this matches your Keycloak client ID
keycloak.client-secret=your-client-secret   # Ensure this matches your Keycloak client secret


